import pytesseract
import keras_ocr
import numpy as np
import xlwings as xw
import re
import pandas as pd 

# =============================================================================
# 
# Funzioni per eliminare caratteri non alphanumerici e lettere da una stringa. 
# 
# =============================================================================

def remove_non_alphanumeric_except_space(s):
    return re.sub(r'[^a-zA-Z0-9 ]', '', s)

def remove_letters(input_string):
    return re.sub(r'[a-zA-Z]', '', input_string)

# =============================================================================
# 
# Funzione ocr, legge l immagine bbg e importa la matrice in un file excell.
#
# ! ! ! Limiti: 1)La matrice deve essere tagliata prendendo come prime ! ! !
# ! ! !           riga: Expiry, Exp Date, ImpFwd, strikes              ! ! !
# ! ! !           colonna: Exp Date, Dates                             ! ! !
# ! ! !         2)Gli strike sono fissati                              ! ! !
# ! ! !         3) i valori di vola vengono presi bene, per le date    ! ! !
# ! ! !            ci possono essere errori, possibile fissarle?       ! ! !
# 
# =============================================================================

def ocr_bbg_volmat_excell(
        immage_position, tesseract_position, excell_position, sheet_name, strike ,return_df=False):
    # =============================================================================
    # 
    # posizione della matrice di vol
    # NB. la matrice deve essere tagliata sui bordi vedi t1,t2,t3
    # 
    # =============================================================================
    
    url = immage_position
    
    # =============================================================================
    # 
    # posizione di tesseract exe che ho spostato in fase di istallazione 
    # 
    # =============================================================================
    
    pytesseract.pytesseract.tesseract_cmd = tesseract_position
    
    # =============================================================================
    # 
    # importa l immagine e configura l OCR, poi appendo in una lista 
    # la stringa da ripulire
    # 
    # =============================================================================
    
    image =  keras_ocr.tools.read(url) 
    custom_config = r'--oem 3 --psm 6'
    tesseract_preds = []
    tesseract_preds.append(pytesseract.image_to_string(image, config=custom_config))
    
    # =============================================================================
    # 
    # Ripulisco la stringa eliminando i valori non alphanumerici e 
    # la divido in righe, nel mentre creo una nuova lista eliminando le righe vuote.
    # Ogni elemento della lista table è una stringa = a una riga della tabella,
    # poi elimino le prime 2 righe e definisco gli strike %
    # gli strike li ho fissati perchè l OCR ha dei problemi con leggere %
    # non credo sia un problema, se la procedura è automatica i livelli di 
    # moneyness immagino siano fissati.
    # 
    # =============================================================================
    
    tesseract_preds = tesseract_preds[0].replace('=', '')
    tesseract_preds = tesseract_preds.split('\n')
    table = []
    
    for i in range(len(tesseract_preds)):
        tesseract_preds[i] = remove_non_alphanumeric_except_space(tesseract_preds[i])
        if tesseract_preds[i] != "":
            table.append(tesseract_preds[i])
    
    table.pop(0)
    table.pop(0)

    
    # =============================================================================
    # 
    # divido ulteriormente le stringhe di table in parole e ricostruisco le date
    # 
    # =============================================================================
    

    dates = []
    
    for i in range(len(table)):
        exp = table[i].split(' ')
        dates.append(exp[0] + ' '+ exp[1]+ ' ' + exp[2])
        
    # =============================================================================
    #     
    # creo la matrice mat e ci storo i valori di volatilità della matrice
    # 
    # =============================================================================
    
    mat = np.zeros((len(dates), len(strike)+1))
    
    for i in range(len(dates)):
        for j in range(3,len(strike)+4):
            exp = table[i].split(' ')
            if float(remove_letters(exp[j]))> 500:
                mat[i,j-3] = float(remove_letters(exp[j]))/100
            else:
                mat[i,j-3] = float(remove_letters(exp[j]))
            
    vol = mat[:,1:]
    
    # fwd = mat[:,0]*100
    
    # =============================================================================
    # 
    # apro un foglio excell lo ripulisco e scrivo i valori di strike %, le date e  
    # le corrispondenti vol, poi salvo il foglio
    # 
    # =============================================================================
    
    wb  = xw.Book(excell_position)
    
    sheet = wb.sheets[sheet_name]
    sheet.clear_contents()
    sheet.range('C2:C{}'.format(len(strike)+2)).value = strike
    sheet.range('B3:B{}'.format(len(dates)+2)).options(transpose=True).value = dates
    #sheet.range('B3:B{}'.format(len(dates)+2)).options(transpose=True).value = fwd
    sheet.range('C3').value = vol
    
    wb.save()
 #   wb.close()
    
    # =============================================================================
    #     
    # se la variabile return_df è True la funzione ritorna anche la matrice 
    # sottoforma di dataframe 
    #     
    # =============================================================================
    
    if return_df == True:
        volmat = pd.DataFrame(vol, index=dates, columns=strike)
        volmat.index.name = 'Dates'
        volmat.columns.name = 'Strikes_ptg'
        return volmat

immage_position = r"C:\Users\j058276\Desktop\python\data\real_time_data\t3.png"
tesseract_position = r'C:\Users\j058276\Desktop\python\tesseract\tesseract.exe'
excell_position = r'C:\Users\j058276\Desktop\python\data\real_time_data\volocr.xlsx'
sheet_name = 'Sheet1'
strike = [ 0.40, 0.45, 0.50, 0.6, 0.65, 0.7, 0.8, 0.9, 0.95, 0.975, 1, 1.025, 1.05, 1.1, 1.2, 1.3, 1.5, 2]

c = ocr_bbg_volmat_excell(immage_position, tesseract_position, excell_position, sheet_name, strike, return_df=False)
