# Modelling prices of in-play football betting, Erik Hoog, October 2013


import numpy as np 
import matplotlib.pyplot as plt


def fact(n):
    if n== 0:
        return 1
    if n == 1:
        return n
    return n * fact(n-1)

def quotes(lamda1, lamda2, t, goal1_in_t, goal2_in_t):

    tau = 1 - t/90
    
    diff_goal = int(goal1_in_t - goal2_in_t)   
    
    goal1 = np.array(range( 11))
    goal2 = np.array(range( 11))
    
    f_goal1 = [fact(i) for i in goal1]
    f_goal2 = [fact(i) for i in goal2]
    
    pg1 = np.array(np.exp(- lamda1 * tau) * ((lamda1*tau) ** goal1) / f_goal1)
    pg2 = np.array( np.exp(- lamda2 * tau) * ((lamda2*tau) ** goal2) / f_goal2)    
    
    mat_prob = np.outer(pg1.T, pg2.T)  
    
    x = 1/sum(np.diagonal(mat_prob, offset=diff_goal))
    due = 1/sum(sum(np.triu(mat_prob, k= 1 + diff_goal)))
    uno = 1/sum(sum(np.tril(mat_prob, k= -1 + diff_goal)))
    
    p2 = sum(sum(np.triu(mat_prob, k= 1 + diff_goal)))
    px = sum(np.diagonal(mat_prob, offset=diff_goal))
    p1 = sum(sum(np.tril(mat_prob, k= -1 + diff_goal)))
    
    return uno, x , due, p1, px, p2


lamda1 = 0.7
 
lamda2 = 1
t = np.linspace(0,89,100)
goal1_in_t = np.zeros_like(t)
goal1_in_t[30:]=1
goal1_in_t[70:]=2

goal2_in_t = np.zeros_like(t)
goal2_in_t[5:]=1
uno = []
x = []
due = []

for i in range(len(t)):
    _,_,_,a,b,c = quotes(lamda1, lamda2, t[i], goal1_in_t[i], goal2_in_t[i])
    uno.append(a)
    x.append(b)
    due.append(c)


plt.scatter(t,uno,s=2, label='uno')
plt.scatter(t,x,s=2, label='x')
plt.scatter(t,due,s=2, label='due')
plt.legend()
plt.show()
